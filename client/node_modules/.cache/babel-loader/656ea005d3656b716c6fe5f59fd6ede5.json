{"ast":null,"code":"import { GET_BREED, GET_ID, GET_NAME, GET_TEMPERAMENTS, ORDER_DOG, POST_DOG, FILTER_DOG } from \"./actionTypes\";\nconst initialState = {\n  DogsById: {},\n  DogsByTemperament: [],\n  DogsByName: [],\n  allDogs: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_BREED:\n      return {\n        ...state,\n        allDogs: payload\n      };\n    case GET_ID:\n      return {\n        ...state,\n        DogsById: payload\n      };\n    case GET_NAME:\n      return {\n        ...state,\n        DogsByName: payload\n      };\n    case GET_TEMPERAMENTS:\n      return {\n        ...state,\n        DogsByTemperament: payload\n      };\n    case FILTER_DOG:\n      const dogsFiltered = state.allDogs.filter(dog => dog.temperament && dog.temperament.toLowerCase().trim().includes(payload));\n      console.log(state.allDogs[3].id);\n      return {\n        ...state,\n        allDogs: dogsFiltered\n      };\n    case ORDER_DOG:\n      return {};\n    case POST_DOG:\n      return {};\n    default:\n      {\n        return {\n          ...state\n        };\n      }\n  }\n};\n\n//case FILTER:\n//            const allRecipesFiltered = state.recipesDiets.filter(recipe =>\n//                recipe.diets.includes(payload)\n//              );\n//              console.log(allRecipesFiltered);\n//              return {\n//                ...state,\n//                recipesDietsFilter:\n//                  payload === \"allRecipes\"\n//                    ? [...state.recipesDiets]\n//                    : allRecipesFiltered\n//              };\n//    \n//              case ORDER:\n//                const allRecipesCopy = [...state.recipesDiets];\n//                console.log(allRecipesCopy);\n//                let sortedRecipes;\n//              \n//                if (payload === \"AH\") {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => a.healthScore - b.healthScore);\n//                }else if (payload === \"AN\") {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => a.name.localeCompare(b.name));\n//                }else if (payload === \"DN\") {\n//                    sortedRecipes = allRecipesCopy.sort((a, b) => b.name.localeCompare(a.name)); \n//                }else {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => b.healthScore - a.healthScore);\n//                }\n//              \n//                return {\n//                  ...state,\n//                  recipesDiets: sortedRecipes\n//                };\nexport default reducer;","map":{"version":3,"names":["GET_BREED","GET_ID","GET_NAME","GET_TEMPERAMENTS","ORDER_DOG","POST_DOG","FILTER_DOG","initialState","DogsById","DogsByTemperament","DogsByName","allDogs","reducer","state","arguments","length","undefined","type","payload","dogsFiltered","filter","dog","temperament","toLowerCase","trim","includes","console","log","id"],"sources":["/home/marioecv/Descargas/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_BREED, GET_ID, GET_NAME, GET_TEMPERAMENTS, ORDER_DOG, POST_DOG, FILTER_DOG } from \"./actionTypes\";\n\nconst initialState = {\n    DogsById: {},\n    DogsByTemperament: [],\n    DogsByName: [],\n    allDogs: [],\n}\n\nconst reducer = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case GET_BREED:\n            return { \n                ...state, allDogs: payload\n            };\n        case GET_ID:\n            return {\n                \n                ...state, DogsById: payload\n            };\n        case GET_NAME:\n            return {\n                ...state, DogsByName: payload,\n            }\n        case GET_TEMPERAMENTS:\n            return {\n                ...state, DogsByTemperament: payload\n            }\n        case FILTER_DOG:\n            const dogsFiltered = state.allDogs.filter(dog => dog.temperament && dog.temperament.toLowerCase().trim().includes(payload))\n            console.log(state.allDogs[3].id);\n            return {\n                ...state, allDogs: dogsFiltered\n        }\n        case ORDER_DOG:\n            return {\n\n        }\n        case POST_DOG:\n            return {\n\n        }\n        default:{\n            return {...state}\n        }\n    }\n}\n\n//case FILTER:\n//            const allRecipesFiltered = state.recipesDiets.filter(recipe =>\n//                recipe.diets.includes(payload)\n//              );\n//              console.log(allRecipesFiltered);\n//              return {\n//                ...state,\n//                recipesDietsFilter:\n//                  payload === \"allRecipes\"\n//                    ? [...state.recipesDiets]\n//                    : allRecipesFiltered\n//              };\n//    \n//              case ORDER:\n//                const allRecipesCopy = [...state.recipesDiets];\n//                console.log(allRecipesCopy);\n//                let sortedRecipes;\n//              \n//                if (payload === \"AH\") {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => a.healthScore - b.healthScore);\n//                }else if (payload === \"AN\") {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => a.name.localeCompare(b.name));\n//                }else if (payload === \"DN\") {\n//                    sortedRecipes = allRecipesCopy.sort((a, b) => b.name.localeCompare(a.name)); \n//                }else {\n//                  sortedRecipes = allRecipesCopy.sort((a, b) => b.healthScore - a.healthScore);\n//                }\n//              \n//                return {\n//                  ...state,\n//                  recipesDiets: sortedRecipes\n//                };\nexport default reducer"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,eAAe;AAE9G,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,CAAC,CAAC;EACZC,iBAAiB,EAAE,EAAE;EACrBC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA2C;EAAA,IAA1CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAE;IAACU,IAAI;IAAEC;EAAO,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,IAAI;IACR,KAAKjB,SAAS;MACV,OAAO;QACH,GAAGa,KAAK;QAAEF,OAAO,EAAEO;MACvB,CAAC;IACL,KAAKjB,MAAM;MACP,OAAO;QAEH,GAAGY,KAAK;QAAEL,QAAQ,EAAEU;MACxB,CAAC;IACL,KAAKhB,QAAQ;MACT,OAAO;QACH,GAAGW,KAAK;QAAEH,UAAU,EAAEQ;MAC1B,CAAC;IACL,KAAKf,gBAAgB;MACjB,OAAO;QACH,GAAGU,KAAK;QAAEJ,iBAAiB,EAAES;MACjC,CAAC;IACL,KAAKZ,UAAU;MACX,MAAMa,YAAY,GAAGN,KAAK,CAACF,OAAO,CAACS,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,WAAW,IAAID,GAAG,CAACC,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAAC,CAAC;MAC3HQ,OAAO,CAACC,GAAG,CAACd,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC,CAACiB,EAAE,CAAC;MAChC,OAAO;QACH,GAAGf,KAAK;QAAEF,OAAO,EAAEQ;MAC3B,CAAC;IACD,KAAKf,SAAS;MACV,OAAO,CAEX,CAAC;IACD,KAAKC,QAAQ;MACT,OAAO,CAEX,CAAC;IACD;MAAQ;QACJ,OAAO;UAAC,GAAGQ;QAAK,CAAC;MACrB;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}